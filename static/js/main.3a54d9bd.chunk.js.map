{"version":3,"sources":["pages/root/RootPage.tsx","pages/sudoku-solver/solver/helper.ts","pages/sudoku-solver/solver/Solve.ts","pages/sudoku-solver/sudoku/EditableItem.tsx","pages/sudoku-solver/sudoku/SudokuPart.tsx","pages/sudoku-solver/sudoku/SudokuRow.tsx","pages/sudoku-solver/sudoku/Sudoku.tsx","pages/sudoku-solver/SudokuPage.tsx","NavigationBar.tsx","pages/rubik/operations/cubeOperations.ts","pages/rubik/rubik/Block.tsx","pages/rubik/rubik/Face.tsx","pages/rubik/rubik/Rubik.tsx","pages/rubik/RubikPage.tsx","pages/clock/clock/Minute.ts","pages/clock/clock/Clock.tsx","pages/clock/ClockPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RootPage","findRow","index","Math","floor","findColumn","getPosibleValuesInRow","input","row","getRowPosibleValuesByRow","getPosibleValuesByColumn","col","getColumnPosibleValuesByColumn","getPartPosibleValuesInPart","startIndex","column","getStartIndex","rowTwo","rowThree","filter","v","undefined","endIndex","rowValues","i","value","push","values","solve","length","posibleValues","partPosibleValues","includes","rowPosibleValues","columnPosibleValues","hypotesisInput","tempRez","verify","results","val","vals","EditableItem","onValueChanged","React","useState","open","setOpen","Select","labelId","id","onClose","onOpen","onChange","event","target","variant","renderValue","style","fontSize","textAlign","MenuItem","brickStyle","border","height","width","tableStyle","SudokuPart","part","viewOnly","matrix","all","rowOne","toMatrix","rocordMap","Map","map","rowIndex","td","colIndex","pos","get","Sudokurow","sudokuRow","part1","part2","part3","flexDirection","display","Sudoku","SudokuPage","Array","state","setState","setViewOnly","prev","newState","className","onClick","solution","NavigationBar","history","useHistory","left","tl","ml","bl","rtl","rtm","right","tr","mr","br","top","tm","bottom","bm","back","br2","front","blockStyle","lineHeight","background","borderRadius","userSelect","toColor","Block","padding","table","borderSpacing","Face","Rubik","cube","slice","rubikButton","marginRight","marginTop","topColor","leftColor","frontColor","rightColor","bottomColor","backColor","RubikPage","from","keys","setCube","minutes","isMinute","minute","minutesScale","scaleLinear","domain","range","PI","minuteToX","theRadius","centerX","angle","sin","minuteToY","centerY","cos","clockSettings","clockWidth","clockHeight","clockCircleThicknes","clockRadius","sencondsArrowLength","minuteArrowLength","hourRadius","getClockSettings","hoursScale","hours","num","drawHourText","svgRef","svg","select","current","hoursLines","selectAll","remove","data","enter","append","attr","hour","hoursToX","hoursToY","text","exit","secondArrowScale","minutesArrowScale","hourArrowScale","hourArrowLength","getTime","date","Date","second","getSeconds","getMinutes","getHours","Clock","useRef","time","setTime","useEffect","settings","innerRadius","hourInnerRadius","minuteRadius","drawLines","handle","setInterval","currentTime","clearInterval","drawHourArrow","drawMinuteArrow","drawSecondsArrow","drawMidleCircle","ref","cx","cy","r","fill","stroke","strokeWidth","ClockPage","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a54d9bd.chunk.js","sourcesContent":["export const RootPage = () => {\n  return <div>\n    <h1>This is a root page</h1>\n    <p>Soo there will be added something more...</p>\n    <p>testing is deployment still works...</p>\n  </div>;\n};\n","import { SudokuInputs } from \"../sudoku/SudokuInputs\";\n\nconst findRow = (index: number): number => {\n  return Math.floor(index / 9);\n};\n\nconst findColumn = (index: number): number => {\n  const rowNumber = findRow(index);\n  const startIndex = rowNumber * 9;\n  return index - startIndex;\n};\n\nconst getStartIndex = (index: number) => {\n  const row = Math.floor(index / 27);\n  const column = findColumn(index);\n  if (column === 8 || column === 7 || column === 6) {\n    return 6 + row * 27;\n  } else if (column === 5 || column === 4 || column === 3) {\n    return 3 + row * 27;\n  } else {\n    return row * 27;\n  }\n};\n\nexport const getPosibleValuesInRow = (input: SudokuInputs, index: number) => {\n  const row = findRow(index);\n  return getRowPosibleValuesByRow(input, row);\n};\n\nexport const getPosibleValuesByColumn = (\n  input: SudokuInputs,\n  index: number\n) => {\n  const col = findColumn(index);\n  return getColumnPosibleValuesByColumn(input, col);\n};\n\nexport const getPartPosibleValuesInPart = (\n  input: SudokuInputs,\n  index: number\n) => {\n  const startIndex = getStartIndex(index);\n\n  const one = input[startIndex];\n  const two = input[startIndex + 1];\n  const three = input[startIndex + 2];\n\n  const rowTwo = startIndex + 9;\n  const four = input[rowTwo];\n  const five = input[rowTwo + 1];\n  const six = input[rowTwo + 2];\n\n  const rowThree = rowTwo + 9;\n  const seven = input[rowThree];\n  const eight = input[rowThree + 1];\n  const nine = input[rowThree + 2];\n\n  return [one, two, three, four, five, six, seven, eight, nine].filter(\n    (v) => v !== undefined\n  );\n};\n\nexport const getRowPosibleValuesByRow = (\n  input: SudokuInputs,\n  row: number\n): number[] => {\n  const startIndex = row * 9;\n  const endIndex = startIndex + 9;\n  const rowValues: number[] = [];\n  for (let i = startIndex; i < endIndex; i++) {\n    const value = input[i];\n    if (value) {\n      rowValues.push(value);\n    }\n  }\n  return rowValues;\n};\n\nexport const getColumnPosibleValuesByColumn = (\n  input: SudokuInputs,\n  column: number\n): number[] => {\n  const values: number[] = [];\n  for (let i = 0; i < 9; i++) {\n    const pos = column + i * 9;\n    const value = input[pos];\n    if (value) {\n      values.push(value);\n    }\n  }\n  return values;\n};\n","import { SudokuInputs } from \"../sudoku/SudokuInputs\";\nimport { getColumnPosibleValuesByColumn, getPartPosibleValuesInPart, getPosibleValuesByColumn, getPosibleValuesInRow, getRowPosibleValuesByRow } from \"./helper\";\n\nexport const solve = (input: SudokuInputs): SudokuInputs => {\n  for (let index = 0; index < input.length; index++) {\n    const value = input[index];\n    if (!value) {\n      let posibleValues = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      const partPosibleValues = getPartPosibleValuesInPart(input, index);\n      posibleValues = posibleValues.filter(\n        (v) => !partPosibleValues.includes(v)\n      );\n\n      const rowPosibleValues = getPosibleValuesInRow(input, index);\n      posibleValues = posibleValues.filter(\n        (v) => !rowPosibleValues.includes(v)\n      );\n\n      const columnPosibleValues = getPosibleValuesByColumn(input, index);\n      posibleValues = posibleValues.filter(\n        (v) => !columnPosibleValues.includes(v)\n      );\n      for (const row of posibleValues) {\n        const hypotesisInput = [...input];\n        hypotesisInput[index] = row;\n        const tempRez = solve(hypotesisInput);\n        const tempRezVerified = verify(tempRez);\n        if (tempRezVerified) {\n          return tempRez;\n        }\n      }\n      return input;\n    }\n  }\n\n  return input;\n};\n\nconst verify = (results: SudokuInputs): boolean => {\n  const undefinedResultsExist =\n    results.filter((val) => val === undefined).length === 0;\n  if (!undefinedResultsExist) {\n    return false;\n  }\n\n  for (let row = 0; row < 9; row++) {\n    const vals = getRowPosibleValuesByRow(results, row);\n    const posibleValues = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const left = posibleValues.filter((v) => !vals.includes(v));\n    if (left.length > 0) {\n      return false;\n    }\n  }\n\n  for (let col = 0; col < 9; col++) {\n    const vals = getColumnPosibleValuesByColumn(results, col);\n    const posibleValues = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const left = posibleValues.filter((v) => !vals.includes(v));\n    if (left.length > 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","import { MenuItem, Select } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface EditableItemProps {\n  value: number | undefined;\n  onValueChanged: (value: number | undefined) => void;\n}\n\nexport const EditableItem = ({ value, onValueChanged }: EditableItemProps) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const v = event.target.value as number;\n    if (v) {\n      onValueChanged(v);\n    } else {\n      onValueChanged(undefined);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Select\n      labelId=\"val\"\n      id=\"value\"\n      open={open}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      value={value}\n      onChange={handleChange}\n      variant=\"outlined\"\n      renderValue={(v) => {\n        return (\n          <div\n            style={{\n              fontSize: \"30px\",\n              textAlign: \"center\",\n            }}\n          >\n            {value}\n          </div>\n        );\n      }}\n    >\n      <MenuItem value=\"\">\n        <em>None</em>\n      </MenuItem>\n      <MenuItem value={1}>1</MenuItem>\n      <MenuItem value={2}>2</MenuItem>\n      <MenuItem value={3}>3</MenuItem>\n      <MenuItem value={4}>4</MenuItem>\n      <MenuItem value={5}>5</MenuItem>\n      <MenuItem value={6}>6</MenuItem>\n      <MenuItem value={7}>7</MenuItem>\n      <MenuItem value={8}>8</MenuItem>\n      <MenuItem value={9}>9</MenuItem>\n    </Select>\n  );\n};\n","import { CSSProperties } from \"react\";\nimport { EditableItem } from \"./EditableItem\";\nimport { SudokuInputs } from \"./SudokuInputs\";\n\nconst brickStyle: CSSProperties = {\n  border: \"1px solid black\",\n  height: \"60px\",\n  width: \"60px\",\n  textAlign: \"center\",\n  fontSize: \"30px\",\n};\n\nconst tableStyle: CSSProperties = {\n  border: \"1px solid black\",\n};\n\nconst toMatrix = (all: (number | undefined)[], part: number): Matrix => {\n  const rowOne = part * 3 - 1;\n  const one = all[rowOne + 1];\n  const two = all[rowOne + 2];\n  const three = all[rowOne + 3];\n\n  const rowTwo = rowOne + 6;\n  const four = all[rowTwo + 4];\n  const five = all[rowTwo + 5];\n  const six = all[rowTwo + 6];\n\n  const rowThree = rowTwo + 6;\n  const seven = all[rowThree + 7];\n  const eight = all[rowThree + 8];\n  const nine = all[rowThree + 9];\n\n  return [\n    [one, two, three],\n    [four, five, six],\n    [seven, eight, nine],\n  ];\n};\n\ntype Matrix = (number | undefined)[][];\ninterface SudokuPartProps {\n  values: SudokuInputs;\n  part: number;\n  viewOnly?: boolean;\n  onValueChanged?: (index: number, value: number | undefined) => void;\n}\n\nexport const SudokuPart = ({\n  values,\n  part,\n  viewOnly,\n  onValueChanged,\n}: SudokuPartProps) => {\n  const matrix = toMatrix(values, part);\n  const rowOne = part * 3 - 1;\n  const rowTwo = rowOne + 6;\n  const rowThree = rowTwo + 6;\n\n  const rocordMap = new Map<number, number>([\n    [0, rowOne + 1],\n    [1, rowOne + 2],\n    [2, rowOne + 3],\n\n    [3, rowTwo + 4],\n    [4, rowTwo + 5],\n    [5, rowTwo + 6],\n\n    [6, rowThree + 7],\n    [7, rowThree + 8],\n    [8, rowThree + 9],\n  ]);\n  return (\n    <table style={tableStyle}>\n      <tbody>\n        {matrix.map((row, rowIndex) => {\n          return (\n            <tr key={rowIndex} style={brickStyle}>\n              {row.map((td, colIndex) => {\n                return (\n                  <td key={colIndex} style={brickStyle}>\n                    {viewOnly ? (\n                      td\n                    ) : (\n                      <EditableItem\n                        value={td}\n                        onValueChanged={(value) => {\n                          if (onValueChanged) {\n                            const pos = rowIndex * 3 + colIndex;\n                            const index = rocordMap.get(pos) as number;\n                            onValueChanged(index, value);\n                          }\n                        }}\n                      ></EditableItem>\n                    )}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { SudokuInputs } from \"./SudokuInputs\";\nimport {  SudokuPart } from \"./SudokuPart\";\ninterface SudokurowProps {\n  values: SudokuInputs;\n  sudokuRow: number;\n  viewOnly?: boolean;\n  onValueChanged?: (\n    index: number,\n    value: number | undefined\n  ) => void;\n}\n\nexport const Sudokurow = ({ values, sudokuRow, onValueChanged, viewOnly }: SudokurowProps) => {\n  const part1 = sudokuRow * 9;\n  const part2 = part1 + 1;\n  const part3 = part2 + 1;\n\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        display: \"flex\",\n      }}\n    >\n      <SudokuPart values={values} viewOnly={viewOnly} part={part1} key={part1} onValueChanged={onValueChanged} />\n      <SudokuPart values={values} viewOnly={viewOnly} part={part2} key={part2} onValueChanged={onValueChanged} />\n      <SudokuPart values={values} viewOnly={viewOnly} part={part3} key={part3} onValueChanged={onValueChanged} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { SudokuInputs } from \"./SudokuInputs\";\nimport { Sudokurow } from \"./SudokuRow\";\n\ninterface SudokuProps {\n  input: SudokuInputs;\n  viewOnly?: boolean;\n  onValueChanged?: (\n    index: number,\n    value: number | undefined\n  ) => void;\n}\n\nexport const Sudoku = ({ input, onValueChanged, viewOnly }: SudokuProps) => {\n  return (\n    <div>\n      <Sudokurow values={input} sudokuRow={0} viewOnly={viewOnly} key={0} onValueChanged={onValueChanged} />\n      <Sudokurow values={input} sudokuRow={1} viewOnly={viewOnly} key={1} onValueChanged={onValueChanged} />\n      <Sudokurow values={input} sudokuRow={2} viewOnly={viewOnly} key={2} onValueChanged={onValueChanged} />\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { solve } from \"./solver/Solve\";\nimport { Sudoku } from \"./sudoku/Sudoku\";\nimport \"./SudokuPage.css\";\n\nexport const SudokuPage = () => {\n  const [state, setState] = useState(new Array<number | undefined>(81));\n  const [viewOnly, setViewOnly] = useState(false);\n\n  const solveSudoku = () => {\n    const solution = solve(state);\n    setState(solution);\n    setViewOnly(true);\n  };\n\n  const clearSolution = () => {\n    setState(new Array<number | undefined>(81));\n    setViewOnly(false);\n  };\n\n  return (\n    <div>\n      <Sudoku\n        viewOnly={viewOnly}\n        input={state}\n        onValueChanged={(index, val) => {\n          setState((prev) => {\n            const newState = [...prev];\n            newState[index] = val;\n            return newState;\n          });\n        }}\n      />\n      <button className=\"SudokuButton\" onClick={solveSudoku}>Solve</button>\n      <button className=\"SudokuButton\" onClick={clearSolution}>Clear</button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./NavigationBar.css\";\n\nexport const NavigationBar = () => {\n  const history = useHistory();\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th className=\"th\" onClick={() => history.push(\"/\")}>\n            Home\n          </th>\n          <th className=\"th\" onClick={() => history.push(\"/rubik\")}>\n            Rubik\n          </th>\n          <th className=\"th\" onClick={() => history.push(\"/sudoku\")}>\n            Sudoku solver\n          </th>\n          <th className=\"th\" onClick={() => history.push(\"/clock\")}>\n            Clock\n          </th>\n        </tr>\n      </thead>\n    </table>\n  );\n};\n","export type CubeData = number[];\n\nexport const initialize = (): CubeData => {\n  return Array.from(Array(54).keys());\n};\n\n//TODO: move operations into separate files\nexport const left = (input: CubeData): CubeData => {\n  const val = [...input];\n  //TL\n  const tl = val[45];\n  val[45] = val[36];\n  val[36] = val[18];\n  val[18] = val[0];\n  val[0] = tl;\n\n  //ML\n  const ml = val[48];\n  val[48] = val[39];\n  val[39] = val[21];\n  val[21] = val[3];\n  val[3] = ml;\n\n  //BL\n  const bl = val[51];\n  val[51] = val[42];\n  val[42] = val[24];\n  val[24] = val[6];\n  val[6] = bl;\n\n  //rotate corners\n  const rtl = val[9];\n  val[9] = val[15];\n  val[15] = val[17];\n  val[17] = val[11];\n  val[11] = rtl;\n\n  //rotate center\n  const rtm = val[10];\n  val[10] = val[12];\n  val[12] = val[16];\n  val[16] = val[14];\n  val[14] = rtm;\n\n  return val;\n};\n\nexport const leftB = (input: CubeData): CubeData => {\n  //TODO: implement better\n  return left(left(left(input)));\n};\n\nexport const right = (input: CubeData): CubeData => {\n  const val = [...input];\n\n  //TR\n  const tr = val[2];\n  val[2] = val[20];\n  val[20] = val[38];\n  val[38] = val[47];\n  val[47] = tr;\n\n  //MR\n  const mr = val[5];\n  val[5] = val[23];\n  val[23] = val[41];\n  val[41] = val[50];\n  val[50] = mr;\n\n  //BR\n  const br = val[8];\n  val[8] = val[26];\n  val[26] = val[44];\n  val[44] = val[53];\n  val[53] = br;\n\n  //rotate corners\n  const rtl = val[27];\n  val[27] = val[33];\n  val[33] = val[35];\n  val[35] = val[29];\n  val[29] = rtl;\n\n  //rotate center\n  const rtm = val[28];\n  val[28] = val[30];\n  val[30] = val[34];\n  val[34] = val[32];\n  val[32] = rtm;\n\n  return val;\n};\n\nexport const rightB = (input: CubeData) => {\n  //TODO: implement better\n  return right(right(right(input)));\n};\n\nexport const top = (input: CubeData) => {\n  const val = [...input];\n\n  //rotate corner\n  const rtl = val[0];\n  val[0] = val[6];\n  val[6] = val[8];\n  val[8] = val[2];\n  val[2] = rtl;\n\n  //rotate center\n  const rtm = val[1];\n  val[1] = val[3];\n  val[3] = val[7];\n  val[7] = val[5];\n  val[5] = rtm;\n\n  //TL\n  const tl = val[9];\n  val[9] = val[18];\n  val[18] = val[27];\n  val[27] = val[53];\n  val[53] = tl;\n\n  //TM\n  const tm = val[10];\n  val[10] = val[19];\n  val[19] = val[28];\n  val[28] = val[52];\n  val[52] = tm;\n\n  //TR\n  const tr = val[11];\n  val[11] = val[20];\n  val[20] = val[29];\n  val[29] = val[51];\n  val[51] = tr;\n\n  return val;\n};\n\nexport const topB = (input: CubeData) => {\n  //TODO: implement better\n  return top(top(top(input)));\n};\n\nexport const bottom = (input: CubeData): CubeData => {\n  const val = [...input];\n\n  //rotate corner\n  const rtl = val[36];\n  val[36] = val[42];\n  val[42] = val[44];\n  val[44] = val[38];\n  val[38] = rtl;\n\n  //rotate center\n  const rtm = val[37];\n  val[37] = val[39];\n  val[39] = val[43];\n  val[43] = val[41];\n  val[41] = rtm;\n\n  //BR\n  const br = val[35];\n  val[35] = val[26];\n  val[26] = val[15];\n  val[15] = val[45];\n  val[45] = br;\n\n  //BM\n  const bm = val[34];\n  val[34] = val[25];\n  val[25] = val[16];\n  val[16] = val[46];\n  val[46] = bm;\n\n  //BL\n  const bl = val[33];\n  val[33] = val[24];\n  val[24] = val[17];\n  val[17] = val[47];\n  val[47] = bl;\n\n  return val;\n};\n\nexport const bottomB = (input: CubeData) => {\n  //TODO: implement better\n  return bottom(bottom(bottom(input)));\n};\n\nexport const back = (input: CubeData): CubeData => {\n  const val = [...input];\n\n  //rotate corner\n  const rtl = val[45];\n  val[45] = val[51];\n  val[51] = val[53];\n  val[53] = val[47];\n  val[47] = rtl;\n\n  //rotate center\n  const rtm = val[46];\n  val[46] = val[48];\n  val[48] = val[52];\n  val[52] = val[50];\n  val[50] = rtm;\n\n  //BR\n  const br = val[44];\n  val[44] = val[15];\n  val[15] = val[0];\n  val[0] = val[29];\n  val[29] = br;\n\n  //MR\n  const mr = val[32];\n  val[32] = val[43];\n  val[43] = val[12];\n  val[12] = val[1];\n  val[1] = mr;\n\n  //BR\n  const br2 = val[35];\n  val[35] = val[42];\n  val[42] = val[9];\n  val[9] = val[2];\n  val[2] = br2;\n\n  return val;\n};\n\nexport const backB = (input: CubeData) => {\n  //TODO: implement better\n  return back(back(back(input)));\n};\n\nexport const front = (input: CubeData): CubeData => {\n  const val = [...input];\n\n  //rotate corner\n  const rtl = val[18];\n  val[18] = val[24];\n  val[24] = val[26];\n  val[26] = val[20];\n  val[20] = rtl;\n\n  //rotate center\n  const rtm = val[19];\n  val[19] = val[21];\n  val[21] = val[25];\n  val[25] = val[23];\n  val[23] = rtm;\n\n  //BR\n  const br = val[8];\n  val[8] = val[11];\n  val[11] = val[36];\n  val[36] = val[33];\n  val[33] = br;\n\n  //BM\n  const bm = val[7];\n  val[7] = val[14];\n  val[14] = val[37];\n  val[37] = val[30];\n  val[30] = bm;\n\n  //BL\n  const bl = val[6];\n  val[6] = val[17];\n  val[17] = val[38];\n  val[38] = val[27];\n  val[27] = bl;\n\n  return val;\n}\n\nexport const frontB = (input: CubeData) => {\n  //TODO: implement better\n  return front(front(front(input)));\n};","import { CSSProperties } from \"react\";\n\n//TODO: move this style to CSS\nconst blockStyle: CSSProperties = {\n  width: \"50px\",\n  height: \"50px\",\n  lineHeight: \"50px\",\n  border: \"3px solid black\",\n  background: \"lightblue\",\n  textAlign: \"center\",\n  borderRadius: \"4px\",\n  userSelect: \"none\",\n};\n\ninterface BlockProps {\n  value: number;\n}\n\nexport const toColor = (index: number) => {\n  if (index >= 45) {\n    return \"salmon\";\n  }\n  if (index >= 36) {\n    return \"yellow\";\n  }\n  if (index >= 27) {\n    return \"lime\";\n  }\n  if (index >= 18) {\n    return \"orange\";\n  }\n  if (index >= 9) {\n    return \"DeepSkyBlue\";\n  }\n  return \"white\";\n};\n\nexport const Block = ({ value }: BlockProps) => {\n  return (\n    <div\n      style={{\n        ...blockStyle,\n        background: toColor(value),\n      }}\n    >\n      {value}\n    </div>\n  );\n};\n","import React, { CSSProperties } from \"react\";\nimport { CubeData } from \"../operations/cubeOperations\";\nimport { Block } from \"./Block\";\n\ninterface FaceProps {\n  values: CubeData;\n}\n\nconst td: CSSProperties = {\n  padding: \"0.02rem\",\n};\n\nconst tr: CSSProperties = {};\n\nconst table: CSSProperties = {\n  borderSpacing: \"0.1rem\",\n};\n\nexport const Face = ({ values }: FaceProps) => {\n  return (\n    <table style={table}>\n      <tbody>\n        <tr style={tr}>\n          <td style={td}>\n            <Block value={values[0]} />\n          </td>\n          <td style={td}>\n            <Block value={values[1]} />\n          </td>\n          <td style={td}>\n            <Block value={values[2]} />\n          </td>\n        </tr>\n        <tr style={tr}>\n          <td style={td}>\n            <Block value={values[3]} />\n          </td>\n          <td style={td}>\n            <Block value={values[4]} />\n          </td>\n          <td style={td}>\n            <Block value={values[5]} />\n          </td>\n        </tr>\n        <tr style={tr}>\n          <td style={td}>\n            <Block value={values[6]} />\n          </td>\n          <td style={td}>\n            <Block value={values[7]} />\n          </td>\n          <td style={td}>\n            <Block value={values[8]} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n","import React, { CSSProperties } from \"react\";\nimport { CubeData } from \"../operations/cubeOperations\";\nimport { Face } from \"./Face\";\n\ninterface RubikProps {\n  cube: CubeData;\n}\n\nconst td: CSSProperties = {};\n\nconst tr: CSSProperties = {};\n\nconst table: CSSProperties = {\n  borderSpacing: \"0.1rem\",\n};\n\nexport const Rubik = ({ cube }: RubikProps) => {\n  return (\n    <table style={table}>\n      <tr style={tr}>\n        <td style={td}></td>\n        <td style={td}>\n          <Face values={cube.slice(0, 9)} />\n        </td>\n        <td style={td}></td>\n      </tr>\n      <tr style={tr}>\n        <td style={td}>\n          <Face values={cube.slice(9, 18)} />\n        </td>\n        <td style={td}>\n          <Face values={cube.slice(18, 27)} />\n        </td>\n        <td style={td}>\n          <Face values={cube.slice(27, 36)} />\n        </td>\n      </tr>\n      <tr style={tr}>\n        <td style={td}></td>\n        <td style={td}>\n          <Face values={cube.slice(36, 45)} />\n        </td>\n        <td style={td}></td>\n      </tr>\n      <tr style={tr}>\n        <td style={td}></td>\n        <td style={td}>\n          <Face values={cube.slice(45, 54)} />\n        </td>\n        <td style={td}></td>\n      </tr>\n    </table>\n  );\n};\n","import { CSSProperties, useState } from \"react\";\nimport {\n  front,\n  initialize,\n  left,\n  top,\n  right,\n  bottom,\n  back,\n} from \"./operations/cubeOperations\";\nimport { toColor } from \"./rubik/Block\";\nimport { Rubik } from \"./rubik/Rubik\";\n\nconst rubikButton: CSSProperties = {\n  border: \"3px solid black\",\n  borderRadius: \"0.5rem\",\n  padding: \"10px 25px\",\n  marginRight: \"0.3rem\",\n  marginTop: \"0.3rem\",\n  fontSize: \"16px\",\n};\n\nconst topColor = toColor(4);\nconst leftColor = toColor(13);\nconst frontColor = toColor(22);\nconst rightColor = toColor(31);\nconst bottomColor = toColor(40);\nconst backColor = toColor(49);\n\nexport const RubikPage = () => {\n  const [cube, setCube] = useState(initialize());\n\n  const rotateTop = () => setCube(top(cube));\n  const rotateLeft = () => setCube(left(cube));\n  const rotateFront = () => setCube(front(cube));\n  const rotateRight = () => setCube(right(cube));\n  const rotateBottom = () => setCube(bottom(cube));\n  const rotateBack = () => setCube(back(cube));\n  return (\n    <div>\n      <Rubik cube={cube} />\n      <div\n        style={{\n          marginTop: \"1rem\",\n        }}\n      >\n        <button\n          onClick={rotateTop}\n          style={{\n            ...rubikButton,\n            background: topColor,\n          }}\n        >\n          top\n        </button>\n        <button\n          onClick={rotateLeft}\n          style={{\n            ...rubikButton,\n            background: leftColor,\n          }}\n        >\n          left\n        </button>\n        <button\n          onClick={rotateFront}\n          style={{\n            ...rubikButton,\n            background: frontColor,\n          }}\n        >\n          front\n        </button>\n        <button\n          onClick={rotateRight}\n          style={{\n            ...rubikButton,\n            background: rightColor,\n          }}\n        >\n          right\n        </button>\n        <button\n          onClick={rotateBottom}\n          style={{\n            ...rubikButton,\n            background: bottomColor,\n          }}\n        >\n          bottom\n        </button>\n        <button\n          onClick={rotateBack}\n          style={{\n            ...rubikButton,\n            background: backColor,\n          }}\n        >\n          back\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { scaleLinear, select } from \"d3\";\nimport { MutableRefObject } from \"react\";\nimport { ClockSettings } from \"./Clock\";\n\nconst minutes = Array.from(Array(60).keys());\nconst isMinute = (minute: number) => minute % 5;\nconst minutesScale = scaleLinear()\n  .domain([0, 60])\n  .range([0, Math.PI * 2]);\n\nconst minuteToX = (\n  minute: number,\n  theRadius: number,\n  { centerX }: ClockSettings\n) => {\n  const angle = minutesScale(minute);\n  const length = theRadius * Math.sin(angle);\n  return centerX + length;\n};\n\nconst minuteToY = (\n  minute: number,\n  theRadius: number,\n  { centerY }: ClockSettings\n) => {\n  const angle = minutesScale(minute);\n  const length = theRadius * Math.cos(angle);\n  return centerY - length;\n};\n\nexport const drawLines = (\n  svgRef: MutableRefObject<SVGSVGElement | null>,\n  clockRadius: number,\n  settings: ClockSettings\n) => {\n  const innerRadius = clockRadius - 10;\n  const hourInnerRadius = innerRadius - 10;\n\n  const minuteRadius = (minute: number) =>\n    isMinute(minute) ? innerRadius : hourInnerRadius;\n  const svg = select(svgRef.current);\n  svg.selectAll(\"#minuteTick\").remove();\n\n  svg\n    .selectAll(\"#minuteTick\")\n    .data(minutes)\n    .enter()\n    .append(\"line\")\n    .attr(\"id\", \"minuteTick\")\n    .attr(\"x1\", (minute) => minuteToX(minute, minuteRadius(minute), settings))\n    .attr(\"y1\", (minute) => minuteToY(minute, minuteRadius(minute), settings))\n    .attr(\"x2\", (minute) => minuteToX(minute, clockRadius, settings))\n    .attr(\"y2\", (minute) => minuteToY(minute, clockRadius, settings))\n    .attr(\"stroke\", \"black\")\n    .attr(\"stroke-width\", (minute) => (isMinute(minute) ? 2 : 4));\n};\n","import { MutableRefObject, useEffect, useRef, useState } from \"react\";\nimport { select, scaleLinear } from \"d3\";\nimport { drawLines } from \"./Minute\";\n\nexport interface ClockSettings {\n  clockWidth: number;\n  clockHeight: number;\n  clockCircleThicknes: number;\n  centerX: number;\n  centerY: number;\n  clockRadius: number;\n  sencondsArrowLength: number;\n  minuteArrowLength: number;\n  hourRadius: number;\n}\n\nconst getClockSettings = (): ClockSettings => {\n  const clockWidth = 420;\n  const clockHeight = 420;\n  const clockCircleThicknes = 3;\n  const centerX = clockWidth / 2;\n  const centerY = clockHeight / 2;\n  const clockRadius = clockWidth / 2 - clockCircleThicknes / 2;\n  const sencondsArrowLength = clockWidth / 2 - 60;\n  const minuteArrowLength = clockWidth / 2 - 40;\n  const hourRadius = clockRadius - 45;\n  return {\n    centerX,\n    centerY,\n    clockCircleThicknes,\n    clockRadius,\n    clockHeight,\n    clockWidth,\n    sencondsArrowLength,\n    minuteArrowLength,\n    hourRadius,\n  };\n};\n\nconst clockSettings = getClockSettings();\n\n//TODO: move this code related to hour to separate file\nconst hoursScale = scaleLinear()\n  .domain([0, 12])\n  .range([0, Math.PI * 2]);\n\nconst hoursToX = (hour: number, { centerX, hourRadius }: ClockSettings) => {\n  const angle = hoursScale(hour);\n  const length = hourRadius * Math.sin(angle);\n  return centerX + length;\n};\n\nconst hoursToY = (hour: number, { centerY, hourRadius }: ClockSettings) => {\n  const angle = hoursScale(hour);\n  const length = hourRadius * Math.cos(angle);\n  return centerY - length;\n};\n\nconst hours = Array.from(Array(12).keys()).map((num) => num + 1);\n\nconst drawHourText = (\n  svgRef: MutableRefObject<SVGSVGElement | null>,\n) => {\n  const svg = select(svgRef.current);\n  const hoursLines = svg.selectAll(\"#text\").remove();\n\n  svg\n    .selectAll(\"#text\")\n    .data(hours)\n    .remove()\n    .enter()\n    .append(\"text\")\n    .attr(\"id\", \"text\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"alignment-baseline\", \"middle\")\n    .attr(\"font-size\", \"2.2em\")\n    .attr(\"fill\", \"black\")\n    .attr(\"x\", (hour) => hoursToX(hour, clockSettings))\n    .attr(\"y\", (hour) => hoursToY(hour, clockSettings))\n    .text((value) => value);\n  hoursLines.exit().remove();\n};\n\nconst secondArrowScale = scaleLinear().domain([0, 60]).range([-180, 180]);\n\nconst drawSecondsArrow = (\n  svgRef: MutableRefObject<SVGSVGElement | null>,\n  time: number,\n  { centerX, centerY, sencondsArrowLength }: ClockSettings\n) => {\n  const svg = select(svgRef.current);\n\n  svg.selectAll(\"#second\").remove();\n  svg\n    .append(\"g\")\n    .attr(\"id\", \"second\")\n    .attr(\n      \"transform\",\n      `translate(${centerX}, ${centerY}) rotate(${secondArrowScale(time)})`\n    )\n    .append(\"line\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", 0)\n    .attr(\"x2\", 0)\n    .attr(\"y2\", sencondsArrowLength)\n    .attr(\"stroke\", \"red\")\n    .attr(\"stroke-width\", 3);\n};\n\nconst minutesArrowScale = scaleLinear().domain([0, 3600]).range([-180, 180]);\nconst drawMinuteArrow = (\n  svgRef: MutableRefObject<SVGSVGElement | null>,\n  time: number,\n  { centerX, centerY, minuteArrowLength }: ClockSettings\n) => {\n  const svg = select(svgRef.current);\n\n  svg.selectAll(\"#minute\").remove();\n  svg\n    .append(\"g\")\n    .attr(\"id\", \"minute\")\n    .attr(\n      \"transform\",\n      `translate(${centerX}, ${centerY}) rotate(${minutesArrowScale(time)})`\n    )\n    .append(\"line\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", 0)\n    .attr(\"x2\", 0)\n    .attr(\"y2\", minuteArrowLength)\n    .attr(\"stroke\", \"black\")\n    .attr(\"stroke-width\", 5);\n};\n\nconst hourArrowScale = scaleLinear()\n  .domain([0, 12 * 3600])\n  .range([-180, 180]);\nconst hourArrowLength = clockSettings.clockWidth / 2 - 90;\n\nconst drawHourArrow = (\n  svgRef: MutableRefObject<SVGSVGElement | null>,\n  time: number,\n  { centerX, centerY }: ClockSettings\n) => {\n  const svg = select(svgRef.current);\n\n  svg.selectAll(\"#hour\").remove();\n  svg\n    .append(\"g\")\n    .attr(\"id\", \"hour\")\n    .attr(\n      \"transform\",\n      `translate(${centerX}, ${centerY}) rotate(${hourArrowScale(time)})`\n    )\n    .append(\"line\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", 0)\n    .attr(\"x2\", 0)\n    .attr(\"y2\", hourArrowLength)\n    .attr(\"stroke\", \"black\")\n    .attr(\"stroke-width\", 8);\n};\n\nconst drawMidleCircle = (\n  svgRef: MutableRefObject<SVGSVGElement | null>,\n  { centerX, centerY }: ClockSettings\n) => {\n  const svg = select(svgRef.current);\n\n  svg.selectAll(\"#midleCircle\").remove();\n  svg\n    .append(\"circle\")\n    .attr(\"id\", \"midleCircle\")\n    .attr(\"cx\", centerX)\n    .attr(\"cy\", centerY)\n    .attr(\"r\", 15)\n    .attr(\"fill\", \"white\")\n    .attr(\"stroke-width\", 4)\n    .attr(\"stroke\", \"black\");\n};\n\nconst getTime = () => {\n  const date = new Date();\n  const second = date.getSeconds();\n  const minute = date.getMinutes();\n  const hour = date.getHours();\n\n  return hour * 3600 + minute * 60 + second;\n};\n\nexport const Clock = () => {\n  const svgRef = useRef<SVGSVGElement | null>(null);\n  const [time, setTime] = useState(getTime());\n\n  useEffect(() => {\n    drawLines(svgRef, clockSettings.clockRadius, clockSettings);\n    drawHourText(svgRef);\n\n    const handle = setInterval(() => {\n      const currentTime = getTime();\n      setTime(currentTime);\n    }, 1000);\n    return () => {\n      clearInterval(handle);\n    };\n  }, []);\n\n  useEffect(() => {\n    drawHourArrow(svgRef, time, clockSettings);\n    drawMinuteArrow(svgRef, time, clockSettings);\n    drawSecondsArrow(svgRef, time, clockSettings);\n    drawMidleCircle(svgRef, clockSettings);\n  }, [time]);\n\n  const {\n    centerX,\n    centerY,\n    clockWidth,\n    clockHeight,\n    clockRadius,\n    clockCircleThicknes,\n  } = clockSettings;\n  return (\n    <svg ref={svgRef} width={clockWidth} height={clockHeight}>\n      <circle\n        cx={centerX}\n        cy={centerY}\n        r={clockRadius}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={clockCircleThicknes}\n      />\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { Clock } from \"./clock/Clock\";\n\nexport const ClockPage = () => {\n  return <Clock />;\n};\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { RootPage } from \"./pages/root/RootPage\";\nimport { SudokuPage } from \"./pages/sudoku-solver/SudokuPage\";\nimport { NavigationBar } from \"./NavigationBar\";\nimport { RubikPage } from \"./pages/rubik/RubikPage\";\nimport { ClockPage } from \"./pages/clock/ClockPage\";\n\nexport const App = () => {\n  return (\n    <Router basename=\"/\">\n      <div>\n        <NavigationBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <RootPage />\n          </Route>\n          <Route path=\"/sudoku\">\n            <SudokuPage />\n          </Route>\n          <Route path=\"/rubik\">\n            <RubikPage />\n          </Route>\n          <Route path=\"/clock\">\n            <ClockPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}