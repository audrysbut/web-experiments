{"version":3,"sources":["pages/root/RootPage.tsx","pages/sudoku-solver/sudoku/EditableItem.tsx","pages/sudoku-solver/sudoku/SudokuPart.tsx","pages/sudoku-solver/sudoku/SudokuRow.tsx","pages/sudoku-solver/sudoku/Sudoku.tsx","pages/sudoku-solver/SudokuPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RootPage","EditableItem","value","onValueChanged","React","useState","open","setOpen","Select","labelId","id","onClose","onOpen","onChange","event","v","target","undefined","variant","renderValue","style","fontSize","textAlign","MenuItem","brickStyle","border","height","width","tableStyle","SudokuPart","values","part","viewOnly","matrix","all","rowOne","rowTwo","rowThree","toMatrix","rocordMap","Map","map","row","rowIndex","td","colIndex","pos","index","get","Sudokurow","sudokuRow","part1","part2","part3","flexDirection","display","Sudoku","input","SudokuPage","Array","state","setState","val","prev","newState","App","basename","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b043542.chunk.js","sourcesContent":["export const RootPage = () => {\n  return <div>\n    <h1>This is a root page</h1>\n    <p>Soo there will be added something more...</p>\n  </div>;\n};\n","import { MenuItem, Select } from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface EditableItemProps {\n  value: number | undefined;\n  onValueChanged: (value: number | undefined) => void;\n}\n\nexport const EditableItem = ({ value, onValueChanged }: EditableItemProps) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const v = event.target.value as number;\n    if (v) {\n      onValueChanged(v);\n    } else {\n      onValueChanged(undefined);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Select\n      labelId=\"val\"\n      id=\"value\"\n      open={open}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      value={value}\n      onChange={handleChange}\n      variant=\"outlined\"\n      renderValue={(v) => {\n        return (\n          <div\n            style={{\n              fontSize: \"30px\",\n              textAlign: \"center\",\n            }}\n          >\n            {value}\n          </div>\n        );\n      }}\n    >\n      <MenuItem value=\"\">\n        <em>None</em>\n      </MenuItem>\n      <MenuItem value={1}>1</MenuItem>\n      <MenuItem value={2}>2</MenuItem>\n      <MenuItem value={3}>3</MenuItem>\n      <MenuItem value={4}>4</MenuItem>\n      <MenuItem value={5}>5</MenuItem>\n      <MenuItem value={6}>6</MenuItem>\n      <MenuItem value={7}>7</MenuItem>\n      <MenuItem value={8}>8</MenuItem>\n      <MenuItem value={9}>9</MenuItem>\n    </Select>\n  );\n};\n","import { CSSProperties } from \"react\";\nimport { EditableItem } from \"./EditableItem\";\n\nconst brickStyle: CSSProperties = {\n  border: \"1px solid black\",\n  height: \"70px\",\n  width: \"70px\",\n  textAlign: \"center\",\n  fontSize: \"30px\",\n};\n\nconst tableStyle: CSSProperties = {\n  border: \"1px solid black\",\n};\n\nconst toMatrix = (all: (number | undefined)[], part: number): Matrix => {\n  const rowOne = part * 3 - 1;\n  const one = all[rowOne + 1];\n  const two = all[rowOne + 2];\n  const three = all[rowOne + 3];\n\n  const rowTwo = rowOne + 6;\n  const four = all[rowTwo + 4];\n  const five = all[rowTwo + 5];\n  const six = all[rowTwo + 6];\n\n  const rowThree = rowTwo + 6;\n  const seven = all[rowThree + 7];\n  const eight = all[rowThree + 8];\n  const nine = all[rowThree + 9];\n\n  return [\n    [one, two, three],\n    [four, five, six],\n    [seven, eight, nine],\n  ];\n};\n\ntype Matrix = (number | undefined)[][];\ninterface SudokuPartProps {\n  values: (number | undefined)[];\n  part: number;\n  viewOnly?: boolean;\n  onValueChanged?: (index: number, value: number | undefined) => void;\n}\n\nexport const SudokuPart = ({\n  values,\n  part,\n  viewOnly,\n  onValueChanged,\n}: SudokuPartProps) => {\n  const matrix = toMatrix(values, part);\n  const rowOne = part * 3 - 1;\n  const rowTwo = rowOne + 6;\n  const rowThree = rowTwo + 6;\n\n  const rocordMap = new Map<number, number>([\n    [0, rowOne + 1],\n    [1, rowOne + 2],\n    [2, rowOne + 3],\n\n    [3, rowTwo + 4],\n    [4, rowTwo + 5],\n    [5, rowTwo + 6],\n\n    [6, rowThree + 7],\n    [7, rowThree + 8],\n    [8, rowThree + 9],\n  ]);\n  return (\n    <table style={tableStyle}>\n      <tbody>\n        {matrix.map((row, rowIndex) => {\n          return (\n            <tr key={rowIndex} style={brickStyle}>\n              {row.map((td, colIndex) => {\n                return (\n                  <td key={colIndex} style={brickStyle}>\n                    {viewOnly ? (\n                      td\n                    ) : (\n                      <EditableItem\n                        value={td}\n                        onValueChanged={(value) => {\n                          if (onValueChanged) {\n                            const pos = rowIndex * 3 + colIndex;\n                            const index = rocordMap.get(pos) as number;\n                            onValueChanged(index, value);\n                          }\n                        }}\n                      ></EditableItem>\n                    )}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import {  SudokuPart } from \"./SudokuPart\";\ninterface SudokurowProps {\n  values: (number | undefined)[];\n  sudokuRow: number;\n  viewOnly?: boolean;\n  onValueChanged?: (\n    index: number,\n    value: number | undefined\n  ) => void;\n}\n\nexport const Sudokurow = ({ values, sudokuRow, onValueChanged, viewOnly }: SudokurowProps) => {\n  const part1 = sudokuRow * 9;\n  const part2 = part1 + 1;\n  const part3 = part2 + 1;\n\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        display: \"flex\",\n      }}\n    >\n      <SudokuPart values={values} viewOnly={viewOnly} part={part1} key={part1} onValueChanged={onValueChanged} />\n      <SudokuPart values={values} viewOnly={viewOnly} part={part2} key={part2} onValueChanged={onValueChanged} />\n      <SudokuPart values={values} viewOnly={viewOnly} part={part3} key={part3} onValueChanged={onValueChanged} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Sudokurow } from \"./SudokuRow\";\n\ninterface SudokuProps {\n  input: (number | undefined)[];\n  viewOnly?: boolean;\n  onValueChanged?: (\n    index: number,\n    value: number | undefined\n  ) => void;\n}\n\nexport const Sudoku = ({ input, onValueChanged, viewOnly }: SudokuProps) => {\n  return (\n    <div>\n      <Sudokurow values={input} sudokuRow={0} viewOnly={viewOnly} key={0} onValueChanged={onValueChanged} />\n      <Sudokurow values={input} sudokuRow={1} viewOnly={viewOnly} key={1} onValueChanged={onValueChanged} />\n      <Sudokurow values={input} sudokuRow={2} viewOnly={viewOnly} key={2} onValueChanged={onValueChanged} />\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { Sudoku } from \"./sudoku/Sudoku\";\n\nexport const SudokuPage = () => {\n  const [state, setState] = useState(new Array<number | undefined>(81));\n  return (\n    <Sudoku\n      viewOnly={false}\n      input={state}\n      onValueChanged={(index, val) => {\n        setState((prev) => {\n          const newState = [...prev];\n          newState[index] = val;\n          return newState;\n        });\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { RootPage } from \"./pages/root/RootPage\";\nimport { SudokuPage } from \"./pages/sudoku-solver/SudokuPage\";\n\nexport const App = () => {\n  return (\n    <Router basename=\"/\">\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/sudoku\">Sudoku solver</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\">\n            <RootPage />\n          </Route>\n          <Route path=\"/sudoku\">\n            <SudokuPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}